name: Web CI/CD Workflow

on: 
  push:
    branches: 
      - test_branch
    paths:
      - 'front/**'
  pull_request:
    branches: 
      - main
    paths:
      - 'front/**'

jobs:
  build-and-test-web-with-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node for Web project
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
    - name: Install dependencies for front project
      run: npm ci
      working-directory: front
      
    - name: Build front project
      run: npm run build --if-present
      working-directory: front
      
    - name: Run test with coverage
      working-directory: front
      run: npm run test -- --code-coverage --browsers=ChromeHeadless --watch=false
 
    #- name: Commit Coverage Report
    #  run: |
    #    git config user.name "GitHub Actions Bot"
    #    git config user.email "<>"
    #    git fetch --all
    #    git checkout report
    #    git pull origin report
    #    mkdir -p report/front
    #    cp -r front/coverage/bobapp/* ./report/front/
    #    git add ./report/front/
    #    git commit -m "[Front] Report ${{ #github.event.repository.updated_at}}"
   #     git push origin report
   # env:
   #  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sonar_job:
    runs-on: ubuntu-latest
    needs: build-and-test-web-with-coverage
    
    - uses: actions/checkout@v4
    - name: Setup Node for Web project
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Build and analyze
      working-directory: front
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=gpaysant_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD

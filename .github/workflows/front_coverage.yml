name: Web CI/CD Workflow

on: 
  push:
    branches: 
      - test_branch
    paths:
      - 'front/**'
  pull_request:
    branches: 
      - main
    paths:
      - 'front/**'

jobs:
  build-and-test-web-with-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node for Web project
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
    - name: Install dependencies for front project
      run: npm ci
      working-directory: front
      
    - name: Build front project
      run: npm run build --if-present
      working-directory: front
      
    - name: Run test with coverage
      working-directory: front
      run: npm run test -- --code-coverage --browsers=ChromeHeadless --watch=false

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: front/coverage

  sonar_job:
    runs-on: ubuntu-latest
    needs: build-and-test-web-with-coverage

    steps:
    - uses: actions/checkout@v4
    - name: Setup Node for Web project
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
    - name: Setup JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Cache npm packages
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-cache
        restore-keys: |
          ${{ runner.os }}-npm-cache
    - name: Download Coverage Report
      uses: actions/download-artifact@v3
      with:
        name: coverage-report
        path: front/coverage
    - name: Install SonarQube Scanner
      run: npm install -g sonarqube-scanner
    - name: Run SonarQube scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: >
        sonar-scanner
        -Dsonar.projectKey=app_front
        -Dsonar.sources=./front/src
      working-directory: front

  docker:
    runs-on: ubuntu-latest
    needs: sonar_job
    
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:front"
          push: true
          tags: sboog/front_application:latest

name: Web CI/CD Workflow

on: 
  push:
    branches: 
      - test_branch
    paths:
      - 'front/**'
  pull_request:
    branches: 
      - main
    paths:
      - 'front/**'

jobs:
  build-and-test-web-with-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node for Web project
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
    - name: Install dependencies for front project
      run: npm ci
      working-directory: front
      
    - name: Build front project
      run: npm run build --if-present
      working-directory: front
      
    - name: Run test with coverage
      working-directory: front
      run: npm run test -- --code-coverage --browsers=ChromeHeadless --watch=false

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: front/coverage

  sonar_job:
    runs-on: ubuntu-latest
    needs: build-and-test-web-with-coverage

    steps:
    - uses: actions/checkout@v4
    - name: Setup Node for Web project
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
    - name: Setup JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache npm packages
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-cache
        restore-keys: |
          ${{ runner.os }}-npm-cache
    - name: Download Coverage Report
      uses: actions/download-artifact@v3
      with:
        name: coverage-report
        path: front/coverage
    - name: Build and analyze
      working-directory: front
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        npx sonar-scanner \
          -Dsonar.projectKey=gpaysant_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.organization=sboo \
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
